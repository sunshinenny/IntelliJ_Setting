<application>
  <component name="AppStorage">
    <histories>
      <item value="trailing" />
      <item value="{@macro flutter.widgets.widgetsApp.shortcuts} /// {@tool snippet} /// This example shows how to add a single shortcut for /// [LogicalKeyboardKey.select] to the default shortcuts without needing to /// add your own [Shortcuts] widget. /// /// Alternatively, you could insert a [Shortcuts] widget with just the mapping /// you want to add between the [WidgetsApp] and its child and get the same /// effect. /// /// ```dart /// Widget build(BuildContext context) { /// return WidgetsApp( /// shortcuts: &lt;LogicalKeySet, Intent&gt;{ /// ... WidgetsApp.defaultShortcuts, /// LogicalKeySet(LogicalKeyboardKey.select): const Intent(ActivateAction.key), /// }, /// color: const Color(0xFFFF0000), /// builder: (BuildContext context, Widget child) { /// return const Placeholder(); /// }, /// ); /// } /// ``` /// {@end-tool} /// {@macro flutter.widgets.widgetsApp.shortcuts.seeAlso}" />
      <item value="/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib/ruby/2.6.0/universal-darwin19/rbconfig.rb:229: warning: Insecure world writable dir /Users/sunshinenny/Development in PATH, mode 040777 [!] Automatically assigning platform `iOS` with version `8.0` on target `Runner` because no platform was specified. Please specify a platform for this target in your Podfile. See `https://guides.cocoapods.org/syntax/podfile.html#platform`." />
      <item value="/// Signature for a function that creates a widget, e.g. [StatelessWidget.build] /// or [State.build]. /// /// Used by [Builder.builder], [OverlayEntry.builder], etc. /// /// See also: /// /// * [IndexedWidgetBuilder], which is similar but also takes an index. /// * [TransitionBuilder], which is similar but also takes a child. /// * [ValueWidgetBuilder], which is similar but takes a value and a child." />
      <item value="The following assertion was thrown during a scheduler callback: There are multiple heroes that share the same tag within a subtree. Within each subtree for which heroes are to be animated (i.e. a PageRoute subtree), each Hero must have a unique non-null tag. In this case, multiple heroes had the following tag: feed_title_58244" />
      <item value="Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the RenderFlex to fit within the available space instead of being sized to their natural size. This is considered an error condition because it indicates that there is content that cannot be seen. If the content is legitimately bigger than the available space, consider clipping it with a ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex, like a ListView." />
      <item value="Key key, Axis scrollDirection = Axis.vertical, bool reverse = false, ScrollController controller, bool primary, ScrollPhysics physics, bool shrinkWrap = false, EdgeInsetsGeometry padding, this.itemExtent, bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true, double cacheExtent, List&lt;Widget&gt; children = const &lt;Widget&gt;[], int semanticChildCount, DragStartBehavior dragStartBehavior = DragStartBehavior.start," />
      <item value="RenderBox was not laid out: RenderShrinkWrappingViewport#1e469 relayoutBoundary=up22 NEEDS-PAINT NEEDS-COMPOSITING-BITS-UPDATE 'package:flutter/src/rendering/box.dart': Failed assertion: line 1687 pos 12: 'hasSize' The relevant error-causing widget was:" />
      <item value="The following RenderObject was being processed when the exception was fired: RenderShrinkWrappingViewport#1e469 relayoutBoundary=up22" />
      <item value="Viewports expand in the cross axis to fill their container and constrain their children to match their extent in the cross axis. In this case, a horizontal viewport was given an unlimited amount of vertical space in which to expand." />
      <item value="The following assertion was thrown during performResize(): Horizontal viewport was given unbounded height. Viewports expand in the cross axis to fill their container and constrain their children to match their extent in the cross axis. In this case, a horizontal viewport was given an unlimited amount of vertical space in which to expand." />
      <item value="Either the assertion indicates an error in the framework itself, or we should provide substantially more information in this error message to help you determine and fix the underlying cause." />
      <item value="The getter 'visible' was called on null. Receiver: null Tried calling: visible" />
      <item value="When a row is in a parent that does not provide a finite width constraint, for example if it is in a horizontal scrollable, it will try to shrink-wrap its children along the horizontal axis. Setting a flex on a child (e.g. using Expanded) indicates that the child is to expand to fill the remaining space in the horizontal direction. These two directives are mutually exclusive. If a parent is to shrink-wrap its child, the child cannot simultaneously expand to fit its parent. Consider setting mainAxisSize to MainAxisSize.min and using FlexFit.loose fits for the flexible children (using Flexible rather than Expanded). This will allow the flexible children to size themselves to less than the infinite remaining space they would otherwise be forced to take, and then will cause the RenderFlex to shrink-wrap the children rather than expanding to fit the maximum constraints provided by the parent." />
      <item value="elevation" />
      <item value="splash" />
      <item value="Linearly interpolates between two [ShapeBorder]s. This defers to b's [lerpTo] function if b is not null. If b is null or if its [lerpTo] returns null, it uses a's [lerpFrom] function instead. If both return null, it returns a before t=0.5 and b after t=0.5." />
      <item value="显示卡片" />
      <item value="If this widget is always nested in a scrollable widget there is no need to use a viewport because there will always be enough vertical space for the children. In this case, consider using a Column instead. Otherwise, consider using the &quot;shrinkWrap&quot; property (or a ShrinkWrappingViewport) to size the height of the viewport to the sum of the heights of its children." />
      <item value="thickness" />
      <item value="大拇指" />
      <item value="点赞" />
      <item value="type '_InternalLinkedHashMap&lt;String, dynamic&gt;' is not a subtype of type 'String'" />
      <item value="build" />
      <item value="骨架" />
      <item value="border On Foreground" />
      <item value="shape" />
      <item value="切换" />
      <item value="可点击区域" />
      <item value="middle" />
      <item value="automatically Imply Middle" />
      <item value="automatically Imply Leading" />
      <item value="收藏" />
      <item value="No Such Method Error" />
      <item value="type 'int' is not a subtype of type 'String' in type cast" />
      <item value="text Direction" />
      <item value="semantic Label" />
      <item value="cache Width" />
      <item value="gapless Playback" />
      <item value="match Text Direction" />
      <item value="center Slice" />
      <item value="Expected a key while parsing a block mapping." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="41" />
        <entry key="ENGLISH" value="49" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5179645212f6a8cd" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>